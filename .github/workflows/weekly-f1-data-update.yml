name: Weekly F1DB Data Update

on:
  schedule:
    # Run at 7:00 AM UTC every Tuesday
    - cron: '0 7 * * 2'
  workflow_dispatch:  # Allow manual trigger
    inputs:
      force_download:
        description: 'Force re-download of data even if up to date'
        required: false
        type: boolean
        default: false

jobs:
  update-f1-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas requests
    
    - name: Create data directories
      run: |
        mkdir -p data/f1db
        mkdir -p data/f1db/schema
    
    - name: Run F1DB Data Loader
      id: data_update
      env:
        PYTHONPATH: ${{ github.workspace }}
      run: |
        cd notebooks/advanced
        echo "Running F1DB data loader..."
        
        # Determine if we should force download
        if [ "${{ github.event.inputs.force_download }}" == "true" ]; then
          echo "Force downloading F1DB data..."
          python f1db_data_loader.py download
        else
          echo "Checking for F1DB updates..."
          python f1db_data_loader.py update
        fi
        
        # Validate the data
        echo "Validating F1DB data..."
        python f1db_data_loader.py validate
        
        # Generate summary
        echo "Generating data summary..."
        python f1db_data_loader.py summary > ../../data/f1db/data_summary.txt
        
        # Check if updates were made
        if [ -n "$(git status --porcelain data/f1db/)" ]; then
          echo "updates_made=true" >> $GITHUB_OUTPUT
        else
          echo "updates_made=false" >> $GITHUB_OUTPUT
        fi
    
    
    - name: Cache F1DB data
      uses: actions/cache@v4
      with:
        path: data/f1db
        key: f1db-data-${{ hashFiles('data/f1db/.f1db_version') }}-${{ github.run_id }}
        restore-keys: |
          f1db-data-${{ hashFiles('data/f1db/.f1db_version') }}
          f1db-data-
    
    - name: Upload data artifacts
      if: steps.data_update.outputs.updates_made == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: f1db-data-${{ github.run_id }}
        path: |
          data/f1db/
        retention-days: 7
    
    
    - name: Create commit with updated data
      if: steps.data_update.outputs.updates_made == 'true' && success()
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Add and commit changes
        git add data/f1db/
        git commit -m "chore: Update F1DB data - $(date +'%Y-%m-%d')" \
          -m "Automated weekly update of F1 data from f1db repository"
        
        # Push changes
        git push
        echo "F1DB data changes committed and pushed"
    
    - name: Send notification on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `F1DB Data Update Failed - ${new Date().toISOString().split('T')[0]}`,
            body: `The weekly F1DB data update failed. Please check the [workflow logs](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}).\n\nError occurred during the automated data update process.`,
            labels: ['data-update-failure', 'automated', 'f1-data']
          })